[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.asgi",
        "description": "foodkiosk-backend.foodkiosk.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "foodkiosk-backend.foodkiosk.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-iw6-jkjlv8aq#s5vs#j8v)a9j6pm4r34#%o%a_ole-gse+tb2x'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-iw6-jkjlv8aq#s5vs#j8v)a9j6pm4r34#%o%a_ole-gse+tb2x'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'corsheaders',\n    'orders',",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "ROOT_URLCONF = 'foodkiosk.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "WSGI_APPLICATION = 'foodkiosk.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'Asia/Kolkata'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "TIME_ZONE = 'Asia/Kolkata'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nALLOWED_HOSTS=['*']",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nALLOWED_HOSTS=['*']",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nALLOWED_HOSTS=['*']",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nALLOWED_HOSTS=['*']",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.settings",
        "description": "foodkiosk-backend.foodkiosk.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nALLOWED_HOSTS=['*']",
        "detail": "foodkiosk-backend.foodkiosk.settings",
        "documentation": {}
    },
    {
        "label": "health",
        "kind": 2,
        "importPath": "foodkiosk-backend.foodkiosk.urls",
        "description": "foodkiosk-backend.foodkiosk.urls",
        "peekOfCode": "def health(_):\n    return JsonResponse({'status':'ok'})\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/health/',health),\n    path('api/',include(\"orders.urls\")),\n]",
        "detail": "foodkiosk-backend.foodkiosk.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.urls",
        "description": "foodkiosk-backend.foodkiosk.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/health/',health),\n    path('api/',include(\"orders.urls\")),\n]",
        "detail": "foodkiosk-backend.foodkiosk.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "foodkiosk-backend.foodkiosk.wsgi",
        "description": "foodkiosk-backend.foodkiosk.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "foodkiosk-backend.foodkiosk.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "foodkiosk-backend.orders.migrations.0001_initial",
        "description": "foodkiosk-backend.orders.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('order_number', models.CharField(editable=False, max_length=20, unique=True)),",
        "detail": "foodkiosk-backend.orders.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "foodkiosk-backend.orders.admin",
        "description": "foodkiosk-backend.orders.admin",
        "peekOfCode": "class OrderAdmin(admin.ModelAdmin):\n    list_display = ('order_number', 'total_price', 'created_at')\n    search_fields = ('order_number',)\n    ordering = ('-created_at',)",
        "detail": "foodkiosk-backend.orders.admin",
        "documentation": {}
    },
    {
        "label": "OrdersConfig",
        "kind": 6,
        "importPath": "foodkiosk-backend.orders.apps",
        "description": "foodkiosk-backend.orders.apps",
        "peekOfCode": "class OrdersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'orders'",
        "detail": "foodkiosk-backend.orders.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "foodkiosk-backend.orders.models",
        "description": "foodkiosk-backend.orders.models",
        "peekOfCode": "class Order(models.Model):\n    order_number = models.CharField(max_length=20 , unique=True , editable=False)\n    items = models.JSONField()\n    total_price = models.DecimalField(max_digits=10,decimal_places=2)\n    created_at=models.DateTimeField(auto_now_add=True)\n    def save(self,*args,**kwargs):\n        if not self.order_number:\n            self.order_number = f\"ORD-{uuid.uuid4().hex[:8].upper()}\"\n        super().save(*args,**kwargs)\n    def __str__(self):",
        "detail": "foodkiosk-backend.orders.models",
        "documentation": {}
    },
    {
        "label": "OrderItemSerializer",
        "kind": 6,
        "importPath": "foodkiosk-backend.orders.serializers",
        "description": "foodkiosk-backend.orders.serializers",
        "peekOfCode": "class OrderItemSerializer(serializers.Serializer):\n    id = serializers.IntegerField()\n    name = serializers.CharField(max_length=200)\n    price = serializers.FloatField()\n    quantity = serializers.IntegerField(min_value=1)\nclass OrderSerializer(serializers.ModelSerializer):\n    items = OrderItemSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = ['order_number', 'items', 'total_price', 'created_at']",
        "detail": "foodkiosk-backend.orders.serializers",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "foodkiosk-backend.orders.serializers",
        "description": "foodkiosk-backend.orders.serializers",
        "peekOfCode": "class OrderSerializer(serializers.ModelSerializer):\n    items = OrderItemSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = ['order_number', 'items', 'total_price', 'created_at']\n        read_only_fields = ['order_number', 'total_price', 'created_at']\n    def create(self, validated_data):\n        items = validated_data.pop('items')\n        total = sum(Decimal(str(i['price'])) * i['quantity'] for i in items)\n        return Order.objects.create(items=items, total_price=total)",
        "detail": "foodkiosk-backend.orders.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "foodkiosk-backend.orders.urls",
        "description": "foodkiosk-backend.orders.urls",
        "peekOfCode": "urlpatterns = [\n    path('orders/count/', views.order_count),\n    path('orders/list/', views.list_orders),\n    path('orders/<str:order_number>/', views.get_order),\n    path('orders/', views.create_order),\n]",
        "detail": "foodkiosk-backend.orders.urls",
        "documentation": {}
    },
    {
        "label": "create_order",
        "kind": 2,
        "importPath": "foodkiosk-backend.orders.views",
        "description": "foodkiosk-backend.orders.views",
        "peekOfCode": "def create_order(request):\n    serializer = OrderSerializer(data=request.data)\n    serializer.is_valid(raise_exception=True)\n    order = serializer.save()\n    return Response({\n        'order_number': order.order_number,\n        'total': str(order.total_price),\n        'created_at': order.created_at\n    }, status=status.HTTP_201_CREATED)\n@api_view(['GET'])",
        "detail": "foodkiosk-backend.orders.views",
        "documentation": {}
    },
    {
        "label": "get_order",
        "kind": 2,
        "importPath": "foodkiosk-backend.orders.views",
        "description": "foodkiosk-backend.orders.views",
        "peekOfCode": "def get_order(request, order_number):\n    order = get_object_or_404(Order, order_number=order_number)\n    data = OrderSerializer(order).data\n    return Response(data)\n@api_view(['GET'])\ndef order_count(request):\n    return Response({'total_orders': Order.objects.count()})\n@api_view(['GET'])\ndef list_orders(request):\n    qs = Order.objects.order_by('-created_at')[:50]",
        "detail": "foodkiosk-backend.orders.views",
        "documentation": {}
    },
    {
        "label": "order_count",
        "kind": 2,
        "importPath": "foodkiosk-backend.orders.views",
        "description": "foodkiosk-backend.orders.views",
        "peekOfCode": "def order_count(request):\n    return Response({'total_orders': Order.objects.count()})\n@api_view(['GET'])\ndef list_orders(request):\n    qs = Order.objects.order_by('-created_at')[:50]\n    data = OrderSerializer(qs, many=True).data\n    return Response({'orders': data})",
        "detail": "foodkiosk-backend.orders.views",
        "documentation": {}
    },
    {
        "label": "list_orders",
        "kind": 2,
        "importPath": "foodkiosk-backend.orders.views",
        "description": "foodkiosk-backend.orders.views",
        "peekOfCode": "def list_orders(request):\n    qs = Order.objects.order_by('-created_at')[:50]\n    data = OrderSerializer(qs, many=True).data\n    return Response({'orders': data})",
        "detail": "foodkiosk-backend.orders.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "foodkiosk-backend.manage",
        "description": "foodkiosk-backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'foodkiosk.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "foodkiosk-backend.manage",
        "documentation": {}
    }
]